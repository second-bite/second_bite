// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


/**
 * Consumer-Specific
 */
model Consumer {
  id                  Int                     @id @default(autoincrement())
  email               String                  @unique 
  username            String                  @unique
  password            String
  primary_address_id  Int?                    
  addresses           Address[]
  past_restaurants    PastRestaurants[]
  pinned_restaurants  PinnedRestaurants[]
  friends             Consumer[]              @relation("friends")
  friends_relation    Consumer[]              @relation("friends")
}

model PastRestaurants {
  consumer_id         Int 
  consumer            Consumer                @relation(fields: [consumer_id], references: [id])
  restaurant_id       Int
  restaurant          Restaurant              @relation(fields: [restaurant_id], references: [id])
  assigned_at         DateTime                @default(now())

  @@id([consumer_id, restaurant_id])
}

model PinnedRestaurants {
  consumer_id         Int 
  consumer            Consumer                @relation(fields: [consumer_id], references: [id])
  restaurant_id       Int
  restaurant          Restaurant              @relation(fields: [restaurant_id], references: [id])
  assigned_at         DateTime                @default(now())

  @@id([consumer_id, restaurant_id])
}



/**
 * Owner-Specific
 */
model Owner {
  id                  Int                     @id @default(autoincrement())
  email               String                  @unique 
  username            String                  @unique
  password            String
  restaurants         Restaurant[]
}



/**
 * Restaurant-Specific
 */
enum Categories {
  Chinese
  Indian
  Vietnamese
  Mexican
  Healthy
  Mediterranean
  // ... TODO: Add more
}

model Rating {
  id                Int                       @id @default(autoincrement())
  num_stars         Int
  msg               String
  user_id           Int
  create_date       DateTime                  @default(now())
  restaurant_id     Int  
  restaurant        Restaurant                @relation(fields: [restaurant_id], references:[id])
}

model Restaurant {
  id                Int                     @id @default(autoincrement())
  name              String
  descr             String
  address_id        Int                     @unique
  address           Address                 @relation(fields: [address_id], references: [id])
  categories        Categories[]
  img_url           String
  img_alt           String
  avg_cost          Decimal                 // Avg cost of the surplus (not typical prices)
  ratings           Rating[]
  closing_time      String[]                // Each entry represents a day of the week (Mon-Su)
  owner_id          Int
  owner             Owner                   @relation(fields: [owner_id], references: [id])
  pinned_by_users   PinnedRestaurants[]
  visited_by_users  PastRestaurants[]

  // Analytics
  page_visits       Int                     @default(0)
  revenue           Decimal                 @default(0)
  num_orders        Int                     @default(0)
}



/**
 * Other
 */
model Address {
  // Core Address Info
  street_address  String                      // Street # + Street Name
  city            String
  state           String
  postal_code     String                      // String to preserve leading 0s
  country         String

  id              Int                         @id @default(autoincrement())
  consumer_id     Int? 
  consumer        Consumer?                   @relation(fields:[consumer_id], references: [id])
  restaurant      Restaurant?                 
}

model Feedback {
  id            Int                           @id @default(autoincrement())
  num_stars     Int
  msg           String
  user_id       Int
  create_date   DateTime                      @default(now())
}